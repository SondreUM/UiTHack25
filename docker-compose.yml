# Port 80 and 443 are reserved for the nginx container and should not be used for challenges.
# Available port ranges:
## rev: 5xxx
## noob: 6xxx
## crypto: 7xxx
## web: 8xxx
## pwn: 9xxx
## misc: 10xxx

services:
  # example
  # challenge_name:
  #  build: ./web/challenge_name/src
  #  ports:
  #    - "9000:9000"
  #  restart: on-failure
  # networks:
  #    - nginx_network

  web:
    image: docker.io/library/caddy:latest
    restart: always
    volumes:
      - caddy_data:/data
      - ./infra/caddy_conf:/etc/caddy:ro
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
      - 5005:5005
      - 8001:8001
      - 8002:8002
      - 8004:8004
      - 8005:8005
    networks:
      - default
      - web

  # rev 5xxx

  # noob 6xxx
  noob1:
    build: ./noob/noob1/src
    ports:
      - "6000:22"
    restart: on-failure

  noob2:
    build: ./noob/noob2/src
    ports:
      - "6001:22"
    restart: on-failure

  noob3:
    build: ./noob/noob3/src
    ports:
      - "6002:22"
    restart: on-failure

  noob4:
    build: ./noob/noob4/src
    ports:
      - "6003:22"
    restart: on-failure

  noob5:
    build: ./noob/noob5/src
    ports:
      - "6004:22"
    restart: on-failure

  # web 8xxx
  # note web challenges requiring https should map ports,
  # the ports must be mapped in the nginx.conf file
  # use big_picture as an example
  big_picture:
    build: ./web/big_picture/src
    # ports:
    # - "8001:8080"
    restart: on-failure
    networks:
      - web

  marketplace:
    build: ./web/Evilcorp_marketplace/src
    # ports:
    # - "8002:8002"
    restart: on-failure
    networks:
      - web
    environment:
      - CTF_FLAG=UiTHack25{Pr0t0typ3_P0llut1on_Expl01t3d!}

  bleeding_heart:
    build: ./web/bleeding_heart/
    # ports:
    #   - "8004:8080"
    restart: on-failure
    networks:
      - web

  cross_eyed:
    build: ./web/cross_eyed/
    # ports:
    #   - "8010:8000"
    restart: on-failure
    networks:
      - web

  dinosaur_tech:
    build: ./irl/dinosaur_tech/src
    # ports:
    # - "8803:3000"
    restart: on-failure
    networks:
      - web

  mastermind:
    build: ./misc/mastermind/src
    ports:
      - "10444:4444"
    restart: on-failure

  # pwn 9xxx
  commlink:
    build: ./pwn/commlink/src
    ports:
      - "9000:9000"
    restart: on-failure
  sc0:
    build: ./pwn/sc0/src
    ports:
      - "9001:9001"
    restart: on-failure

  cyber_pirate_frontend:
    build: ./web/cyber_pirate/src/frontend
    # ports:
    #   - "8005:8005"
    restart: on-failure
    networks:
      - web

  cyber_pirate_backend:
    build: ./web/cyber_pirate/src/backend
    # ports:
    #   - "8006:8006"
    restart: on-failure
    networks:
      - web

  hexcore:
    build: ./pwn/hexcore/src
    ports:
      - "9002:9002"
    restart: on-failure
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    cap_add:
      - ALL
    deploy:
      resources:
        limits:
          cpus: "0.015"
          memory: 50M

  knock_knock:
    build: ./misc/knock_knock/src
    ports:
      - "10080:80"
      - "4837:4837"
      - "53254:53254"
      - "1337:1337"
    restart: on-failure

networks:
  default:
  internal:
    internal: true
  web:
    external: true

volumes:
  caddy_data:
